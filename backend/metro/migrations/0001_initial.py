# Generated by Django 5.0.2 on 2025-04-17 11:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckinReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=100, verbose_name='餐廳名稱')),
                ('metro_line', models.CharField(max_length=50, verbose_name='捷運線')),
                ('reviewer_name', models.CharField(default='匿名', max_length=50, verbose_name='評論者名稱')),
                ('rating', models.IntegerField(verbose_name='評分')),
                ('comment', models.TextField(blank=True, verbose_name='評論內容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
            ],
            options={
                'verbose_name': '打卡評論',
                'verbose_name_plural': '打卡評論',
                'db_table': 'metro_checkinreview',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MetroLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=500)),
                ('latitude', models.DecimalField(decimal_places=12, max_digits=15)),
                ('longitude', models.DecimalField(decimal_places=12, max_digits=15)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('google_place_id', models.CharField(max_length=100, unique=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('price_level', models.IntegerField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_review_update', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('train_number', models.CharField(blank=True, max_length=50)),
                ('station_name', models.CharField(max_length=100)),
                ('destination_name', models.CharField(max_length=100)),
                ('count_down', models.CharField(max_length=50)),
                ('now_date_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rating', models.IntegerField()),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='metro.restaurant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=12, max_digits=15)),
                ('longitude', models.DecimalField(decimal_places=12, max_digits=15)),
                ('station_code', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metro_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='metro.metroline')),
            ],
        ),
        migrations.AddField(
            model_name='restaurant',
            name='nearby_stations',
            field=models.ManyToManyField(related_name='nearby_restaurants', to='metro.station'),
        ),
        migrations.CreateModel(
            name='YouBikeStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('total_spaces', models.IntegerField()),
                ('available_spaces', models.IntegerField()),
                ('available_bikes', models.IntegerField()),
                ('latitude', models.DecimalField(decimal_places=12, max_digits=15)),
                ('longitude', models.DecimalField(decimal_places=12, max_digits=15)),
                ('address', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('nearby_stations', models.ManyToManyField(related_name='nearby_youbike_stations', to='metro.station')),
            ],
            options={
                'verbose_name': 'YouBike 站點',
                'verbose_name_plural': 'YouBike 站點',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='YouBikeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_bikes', models.IntegerField()),
                ('available_spaces', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('day_of_week', models.IntegerField()),
                ('hour', models.IntegerField()),
                ('minute', models.IntegerField(default=0)),
                ('is_holiday', models.BooleanField(default=False)),
                ('weather', models.CharField(blank=True, max_length=50, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='metro.youbikestation')),
            ],
            options={
                'verbose_name': 'YouBike 歷史記錄',
                'verbose_name_plural': 'YouBike 歷史記錄',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['station', 'timestamp'], name='metro_youbi_station_efac69_idx'), models.Index(fields=['day_of_week', 'hour'], name='metro_youbi_day_of__78800c_idx')],
            },
        ),
    ]
