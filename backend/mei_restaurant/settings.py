"""
Django settings for mei_restaurant project.








Generated by 'django-admin startproject' using Django 5.1.7.








For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/








For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""








import pymysql
pymysql.install_as_MySQLdb()








from pathlib import Path
import os
from dotenv import load_dotenv








# 載入 .env 文件
load_dotenv()








# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
GOOGLE_PLACES_API_KEY=os.getenv('GOOGLE_PLACES_API_KEY')








# TDX API 設定
TDX_CLIENT_ID = os.getenv('TDX_CLIENT_ID', '11146083-e0c9361d-c117-4c45')
TDX_CLIENT_SECRET = os.getenv('TDX_CLIENT_SECRET', '27562a9f-d8d9-4ed5-b0ef-ef2c2fb13717')








# 台北捷運 API 設定
TAIPEI_METRO_API_USERNAME = os.getenv('TAIPEI_METRO_API_USERNAME')
TAIPEI_METRO_API_PASSWORD = os.getenv('TAIPEI_METRO_API_PASSWORD')
USE_TEST_DATA = os.getenv('USE_TEST_DATA', 'False').lower() == 'false'








# 檢查 API 憑證設置
if not USE_TEST_DATA and (not TAIPEI_METRO_API_USERNAME or not TAIPEI_METRO_API_PASSWORD):
    print("警告: Metro API 憑證未設置，某些功能可能無法使用")








# 媒體文件設定
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')








# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/








# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8bh^r1@!%bdadw##4tbo#u8bonyxz(el13am(k2m=65w1(f3)='








# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True








# 允許所有主機訪問
ALLOWED_HOSTS = ['*']
















# Application definition








INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'accounts',
    'metro',
    'django_apscheduler',
    'django_crontab',
]








MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]








ROOT_URLCONF = 'mei_restaurant.urls'








TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]








WSGI_APPLICATION = 'mei_restaurant.wsgi.application'
















# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases








DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}
















# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators








AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
















# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/








LANGUAGE_CODE = 'zh-hant'








TIME_ZONE = 'Asia/Taipei'








USE_I18N = True








USE_TZ = True
















# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/








STATIC_URL = 'static/'








# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field








DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'








# CORS settings
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]








CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]








# Session settings
SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False
CSRF_USE_SESSIONS = False
CSRF_COOKIE_HTTPONLY = False
SESSION_COOKIE_SAMESITE = None
CSRF_COOKIE_SAMESITE = None








# CSRF settings
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
    "http://140.131.115.112:8080",
    "http://140.131.115.112:8000"
]








AUTH_USER_MODEL = 'accounts.User'








# Crontab 設置
CRONJOBS = [
    # YouBike 站點狀態更新 (每15分鐘)
    ('*/15 * * * *', 'metro.management.commands.update_youbike_status.Command.handle'),
   
    # 餐廳評論更新 (每天凌晨3點)
    ('0 3 * * *', 'metro.management.commands.update_restaurant_reviews.Command.handle'),
]








# Crontab 設定
CRONTAB_DJANGO_SETTINGS_MODULE = 'mei_restaurant.settings'








# YouBike API 設定
YOUBIKE_API_URL = "https://api.metro.taipei/MetroAPI/UBike.asmx"








# 檢查並輸出 API 設定
print("\n=== API 設定檢查 ===")
print(f"API 用戶名: {TAIPEI_METRO_API_USERNAME}")
print(f"API 密碼是否設置: {'是' if TAIPEI_METRO_API_PASSWORD else '否'}")
print(f"使用測試數據: {USE_TEST_DATA}")
print("==================\n")








# 中央氣象局 API 設定
CWB_API_KEY = os.getenv('CWB_API_KEY', '')  # 從環境變數獲取 API 金鑰





























